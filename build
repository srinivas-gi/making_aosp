#!/bin/bash
cd /tmp/rom # Depends on where source got synced

# Normal build steps
. build/envsetup.sh
lunch aosp_RMX1941-userdebug
chmod -R 755 out/
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 30G # It took only 6.4GB for mido
ccache -o compression=true # Will save times and data to download and upload ccache, also negligible performance issue
ccache -z # Clear old stats, so monitor script will provide real ccache statistics

# Next 8 lines should be run first to collect ccache and then upload, after doning it 1 or 2 times, our ccache will help to build without these 8 lines
mka bacon -j$(nproc --all) &  # I used aex build command
sleep 60m # Lets give some space for uploading ccache
kill %1 # better way to kill it!
ccache -s
#and dont use below codes for first 1 or 2 times, to get ccache uploaded,
#as instructed, i got enough cccahe more than 4.5gb, tough source is not buildable, still i wanna go to final steps, my intention to collect ccache is done. Let's start final build, and get shell when bulid fails too! If source is buildable we will get a final zip file, and if not buildable, we will get a shell access to fix it. 1 minute silence for source :-(
#So, i am adding back things which i removed previously! also with my bot and tg id

# upload function for uploading rom zip file! I don't want unwanted builds in my google drive haha!
up(){
	curl --upload-file $1 https://transfer.sh/$(basename $1); echo
	# 14 days, 10 GB limit
}


# Build command! j10 for 10 cpu, j8 for 8 cpu, otherwise memeroy will end up even its 24G
# Upload rom zip file if succeed to build! Send notification to tg! And send shell to tg if build fails!

# Let's compile by parts! Coz of ram issue!
#make api-stubs-docs || echo no problem
#make hiddenapi-lists-docs || echo no problem
#make system-api-stubs-docs || echo no problem
#make test-api-stubs-docs || echo no problem

#mka bacon -j$(nproc --all) 
#up out/target/product/RMX1941/*zip
ccache -s # Let's print ccache statistics finally
